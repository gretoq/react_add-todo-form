{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","getValidId","existingIds","Math","max","todosWithUser","App","useState","setTodos","setTitle","selectedUser","setSelectedUser","hasNoTitleError","setHasNoTitleError","userNotSelectedError","setUserNotSelectedError","action","method","onSubmit","event","preventDefault","newtitle","trim","newTodo","prevTodos","type","placeholder","value","onChange","filteredTitle","currentTarget","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d01fb44.chunk.js","sourcesContent":["import './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport './TodoInfo.scss';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => {\n      const { id } = todo;\n\n      return (\n        <TodoInfo\n          todo={todo}\n          key={id}\n          data-id={id}\n        />\n      );\n    })}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nconst getUser = (userId: number): User | null => (\n  usersFromServer.find(user => userId === user.id) || null\n);\n\nconst getValidId = (todos: Todo[]): number => {\n  const existingIds = todos.map(todo => todo.id);\n\n  return Math.max(...existingIds) + 1;\n};\n\nconst todosWithUser: Todo[] = todosFromServer\n  .map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUser);\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [hasNoTitleError, setHasNoTitleError] = useState(false);\n  const [userNotSelectedError, setUserNotSelectedError] = useState(false);\n\n  const clearForm = () => {\n    setTitle('');\n    setSelectedUser(0);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserNotSelectedError(false);\n\n    setSelectedUser(+event.currentTarget.value);\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setHasNoTitleError(false);\n\n    const newTitle = event.currentTarget.value;\n\n    const filteredTitle = newTitle.replace(/[^A-Za-zА-Яа-я0-9\\s]/g, '');\n\n    setTitle(filteredTitle);\n  };\n\n  const handleSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setHasNoTitleError(true);\n    }\n\n    if (!selectedUser) {\n      setUserNotSelectedError(true);\n    }\n\n    const newtitle = title.trim();\n\n    if (title && selectedUser) {\n      const newTodo = {\n        id: getValidId(todos),\n        userId: selectedUser,\n        title: newtitle,\n        completed: false,\n        user: getUser(selectedUser),\n      };\n\n      setTodos((prevTodos) => ([\n        ...prevTodos,\n        newTodo,\n      ]));\n\n      clearForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmitForm}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"What user must to do...\"\n              value={title}\n              onChange={handleTitle}\n            />\n          </label>\n\n          {hasNoTitleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={handleUser}\n            >\n              <option\n                value=\"0\"\n                disabled\n              >\n                Choose a user\n              </option>\n\n              {usersFromServer.map(({ id, name }) => (\n                <option value={id} key={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {userNotSelectedError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}